{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/Input/Input.jsx","components/NewMovie/regexpUrl.js","components/NewMovie/NewMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","Input","name","value","placeholder","isError","onChange","onFocus","errorMes","htmlFor","id","type","toLowerCase","classNames","redBorder","event","onBlur","visible","urlRegexp","NewMovie","state","isErrorVisible","isRequired","allFieldGood","some","changeHandler","target","test","props","idList","includes","length","setState","focusOutHandler","submitHandler","onAdd","preventDefault","initialState","Movie","this","onSubmit","disabled","Component","App","moviesFromServer","addMovie","ReactDOM","render","document","getElementById"],"mappings":"kzEAIaA,G,kBAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,YAAaC,EAAvB,EAAuBA,OAAQC,EAA/B,EAA+BA,QAA/B,OACvB,yBAAKC,UAAU,QACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,iBAChB,yBACEC,IAAKH,EACLI,IAAI,gBAIV,yBAAKF,UAAU,gBACb,yBAAKA,UAAU,SACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,kBAChB,yBACEC,IAAI,wBACJC,IAAI,WAIV,yBAAKF,UAAU,iBACb,uBAAGA,UAAU,cAAcJ,KAI/B,yBAAKI,UAAU,WACZH,EACD,6BACA,uBAAGM,KAAMJ,GAAT,aAaRJ,EAAUS,aAAe,CACvBP,YAAa,ICxCR,IAAMQ,EAAa,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OACxB,yBAAKN,UAAU,UACZM,EAAOC,KAAI,SAAAC,GAAK,OACf,kBAAC,EAAD,eAAWC,IAAKD,EAAME,QAAYF,SAgBxCH,EAAWD,aAAe,CACxBE,OAAQ,I,0CCyBKK,MA9Cf,YAEI,IADFC,EACC,EADDA,KAAMC,EACL,EADKA,MAAOC,EACZ,EADYA,YAAaC,EACzB,EADyBA,QAASC,EAClC,EADkCA,SAAUC,EAC5C,EAD4CA,QAASC,EACrD,EADqDA,SAEtD,OACE,yBAAKlB,UAAU,WACb,2BAAOmB,QAASP,GACd,wBAAIZ,UAAU,cACXc,EADH,KAIA,2BACEM,GAAIR,EACJC,MAAOA,EACPQ,KAAK,OACLT,KAAMA,EACNE,YAAaA,EAAYQ,cACzBtB,UAAWuB,IACT,YAAa,CAAEC,UAAWT,IAE5BC,SAAU,SAAAS,GAAK,OAAIT,EAASS,IAC5BC,OAAQ,SAAAD,GAAK,OAAIR,EAAQQ,OAG7B,uBACEzB,UAAWuB,IACT,WAAY,CAAEI,QAASZ,KAF3B,IAMG,IACAG,KClCIU,G,MAAY,sKCKZC,EAAb,4MACEC,MAAQ,CACNlC,MAAO,CACLiB,MAAO,GAAIE,SAAS,EAAMgB,gBAAgB,EAAOC,YAAY,GAE/DnC,YAAa,CACXgB,MAAO,GAAIE,SAAS,EAAOgB,gBAAgB,EAAOC,YAAY,GAEhElC,OAAQ,CACNe,MAAO,GAAIE,SAAS,EAAMgB,gBAAgB,EAAOC,YAAY,GAE/DjC,QAAS,CACPc,MAAO,GAAIE,SAAS,EAAMgB,gBAAgB,EAAOC,YAAY,GAE/DtB,OAAQ,CACNG,MAAO,GAAIE,SAAS,EAAMgB,gBAAgB,EAAOC,YAAY,IAfnE,EAuBEC,aAAe,WACb,MAMI,EAAKH,MAET,MAAO,CARP,EACElC,MADF,EAEEC,YAFF,EAGEC,OAHF,EAIEC,QAJF,EAKEW,QAGmDwB,MAAK,SAAA1B,GAAK,OAC7DA,EAAMO,YAjCZ,EAqCEoB,cAAgB,SAACV,GACf,MAAwBA,EAAMW,OAAtBxB,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MACVE,GAAU,EAEd,OAAQH,GACN,IAAK,SACL,IAAK,UACHG,GAAWa,EAAUS,KAAKxB,GAC1B,MACF,IAAK,SACHE,EAAU,EAAKuB,MAAMC,OAAOC,SAAS3B,GAKpB,IAAjBA,EAAM4B,QAAgB,EAAKX,MAAMlB,GAAMoB,aACzCjB,GAAU,GAGZ,EAAK2B,UAAS,SAAAZ,GAAK,sBAChBlB,EADgB,2BAEZkB,EAAMlB,IAFM,IAGfC,QACAE,iBA5DR,EAiEE4B,gBAAkB,SAAClB,GACjB,IAAQb,EAASa,EAAMW,OAAfxB,KAER,EAAK8B,UAAS,SAAAZ,GAAK,sBAChBlB,EADgB,2BAEZkB,EAAMlB,IAFM,IAGfmB,gBAAgB,SAvExB,EA4EEa,cAAgB,SAACnB,GACf,IAAQoB,EAAU,EAAKP,MAAfO,MACR,EAMI,EAAKf,MALPlC,EADF,EACEA,MACAC,EAFF,EAEEA,YACAC,EAHF,EAGEA,OACAC,EAJF,EAIEA,QACAW,EALF,EAKEA,OAGFe,EAAMqB,iBACN,EAAKJ,SAAS,EAAKK,cAEnBF,EAAM,IAAIG,EACRpD,EAAMiB,MACNhB,EAAYgB,MACZf,EAAOe,MACPd,EAAQc,MACRH,EAAOG,SA9Fb,uDAmBE,WACEoC,KAAKF,aAAeE,KAAKnB,QApB7B,oBAkGE,WAAU,IAAD,OACP,EAMImB,KAAKnB,MALPlC,EADF,EACEA,MACAC,EAFF,EAEEA,YACAC,EAHF,EAGEA,OACAC,EAJF,EAIEA,QACAW,EALF,EAKEA,OAGF,OACE,0BAAMwC,SAAU,SAAAzB,GAAK,OAAI,EAAKmB,cAAcnB,KAC1C,kBAAC,EAAD,CACEZ,MAAOjB,EAAMiB,MACbD,KAAK,QACLE,YAAY,QACZC,QAASnB,EAAMmC,gBAAkBnC,EAAMmB,QACvCC,SAAUiC,KAAKd,cACflB,QAASgC,KAAKN,gBACdzB,SAAS,2BAEX,kBAAC,EAAD,CACEL,MAAOhB,EAAYgB,MACnBD,KAAK,cACLE,YAAY,cACZC,QAASlB,EAAYkC,gBAAkBlC,EAAYkB,QACnDC,SAAUiC,KAAKd,cACflB,QAASgC,KAAKN,gBACdzB,SAAS,2BAEX,kBAAC,EAAD,CACEL,MAAOf,EAAOe,MACdD,KAAK,SACLE,YAAY,SACZC,QAASjB,EAAOiC,gBAAkBjC,EAAOiB,QACzCC,SAAUiC,KAAKd,cACflB,QAASgC,KAAKN,gBACdzB,SAAS,8CAEX,kBAAC,EAAD,CACEL,MAAOd,EAAQc,MACfD,KAAK,UACLE,YAAY,UACZC,QAAShB,EAAQgC,gBAAkBhC,EAAQgB,QAC3CC,SAAUiC,KAAKd,cACflB,QAASgC,KAAKN,gBACdzB,SAAS,8CAEX,kBAAC,EAAD,CACEL,MAAOH,EAAOG,MACdD,KAAK,SACLE,YAAY,SACZC,QAASL,EAAOqB,gBAAkBrB,EAAOK,QACzCC,SAAUiC,KAAKd,cACflB,QAASgC,KAAKN,gBACdzB,SAAS,8CAEX,4BACEG,KAAK,SACLrB,UAAU,MACVmD,SAAUF,KAAKhB,gBAHjB,YA1JR,GAA8BmB,aA2KxBJ,EACJ,WAAYpD,EAAOC,EAAaC,EAAQC,EAASW,GAAS,oBACxDuC,KAAKrD,MAAQA,EACbqD,KAAKpD,YAAcA,EACnBoD,KAAKnD,OAASA,EACdmD,KAAKlD,QAAUA,EACfkD,KAAKvC,OAASA,G,QCjLL2C,EAAb,4MACEvB,MAAQ,CACNxB,OAAQgD,GAFZ,EAKEC,SAAW,SAAC/C,GACV,EAAKkC,UAAS,gBAAGpC,EAAH,EAAGA,OAAH,MAAiB,CAC7BA,OAAO,GAAD,mBAAMA,GAAN,CAAcE,SAP1B,4CAWE,WACE,IAAQF,EAAW2C,KAAKnB,MAAhBxB,OAER,OACE,yBAAKN,UAAU,QACb,yBAAKA,UAAU,gBACb,kBAAC,EAAD,CAAYM,OAAQA,KAEtB,yBAAKN,UAAU,WACb,kBAAC,EAAD,CACEuC,OAAQjC,EAAOC,KAAI,SAAAC,GAAK,OAAIA,EAAME,UAClCmC,MAAOI,KAAKM,iBAtBxB,GAAyBH,aCDzBI,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.ab1b7b6e.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import React from 'react';\nimport './Input.scss';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nfunction Input({\n  name, value, placeholder, isError, onChange, onFocus, errorMes,\n}) {\n  return (\n    <div className=\"wrapper\">\n      <label htmlFor={name}>\n        <h2 className=\"fieldTitle\">\n          {placeholder}\n          :\n        </h2>\n        <input\n          id={name}\n          value={value}\n          type=\"text\"\n          name={name}\n          placeholder={placeholder.toLowerCase()}\n          className={classNames(\n            'textField', { redBorder: isError },\n          )}\n          onChange={event => onChange(event)}\n          onBlur={event => onFocus(event)}\n        />\n      </label>\n      <p\n        className={classNames(\n          'errorMes', { visible: isError },\n        )}\n      >\n        *\n        {' '}\n        {errorMes}\n      </p>\n    </div>\n  );\n}\n\nInput.propTypes = {\n  name: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  placeholder: PropTypes.string.isRequired,\n  isError: PropTypes.bool.isRequired,\n  onChange: PropTypes.func.isRequired,\n  onFocus: PropTypes.func.isRequired,\n  errorMes: PropTypes.string.isRequired,\n};\n\nexport default Input;\n","// eslint-disable-next-line max-len\nexport const urlRegexp = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Input from '../Input/Input';\nimport './NewMovie.scss';\nimport { urlRegexp } from './regexpUrl';\n\nexport class NewMovie extends Component {\n  state = {\n    title: {\n      value: '', isError: true, isErrorVisible: false, isRequired: true,\n    },\n    description: {\n      value: '', isError: false, isErrorVisible: false, isRequired: false,\n    },\n    imgUrl: {\n      value: '', isError: true, isErrorVisible: false, isRequired: true,\n    },\n    imdbUrl: {\n      value: '', isError: true, isErrorVisible: false, isRequired: true,\n    },\n    imdbId: {\n      value: '', isError: true, isErrorVisible: false, isRequired: true,\n    },\n  };\n\n  componentDidMount() {\n    this.initialState = this.state;\n  }\n\n  allFieldGood = () => {\n    const {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    } = this.state;\n\n    return [title, description, imgUrl, imdbUrl, imdbId].some(movie => (\n      movie.isError\n    ));\n  };\n\n  changeHandler = (event) => {\n    const { name, value } = event.target;\n    let isError = false;\n\n    switch (name) {\n      case 'imgUrl':\n      case 'imdbUrl':\n        isError = !urlRegexp.test(value);\n        break;\n      case 'imdbId':\n        isError = this.props.idList.includes(value);\n        break;\n      default:\n    }\n\n    if (value.length === 0 && this.state[name].isRequired) {\n      isError = true;\n    }\n\n    this.setState(state => ({\n      [name]: {\n        ...state[name],\n        value,\n        isError,\n      },\n    }));\n  };\n\n  focusOutHandler = (event) => {\n    const { name } = event.target;\n\n    this.setState(state => ({\n      [name]: {\n        ...state[name],\n        isErrorVisible: true,\n      },\n    }));\n  };\n\n  submitHandler = (event) => {\n    const { onAdd } = this.props;\n    const {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    } = this.state;\n\n    event.preventDefault();\n    this.setState(this.initialState);\n\n    onAdd(new Movie(\n      title.value,\n      description.value,\n      imgUrl.value,\n      imdbUrl.value,\n      imdbId.value,\n    ));\n  };\n\n  render() {\n    const {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    } = this.state;\n\n    return (\n      <form onSubmit={event => this.submitHandler(event)}>\n        <Input\n          value={title.value}\n          name=\"title\"\n          placeholder=\"Title\"\n          isError={title.isErrorVisible && title.isError}\n          onChange={this.changeHandler}\n          onFocus={this.focusOutHandler}\n          errorMes=\"this field is required\"\n        />\n        <Input\n          value={description.value}\n          name=\"description\"\n          placeholder=\"Description\"\n          isError={description.isErrorVisible && description.isError}\n          onChange={this.changeHandler}\n          onFocus={this.focusOutHandler}\n          errorMes=\"this field is required\"\n        />\n        <Input\n          value={imgUrl.value}\n          name=\"imgUrl\"\n          placeholder=\"ImgUrl\"\n          isError={imgUrl.isErrorVisible && imgUrl.isError}\n          onChange={this.changeHandler}\n          onFocus={this.focusOutHandler}\n          errorMes=\"this field is required and must place URL\"\n        />\n        <Input\n          value={imdbUrl.value}\n          name=\"imdbUrl\"\n          placeholder=\"imdbUrl\"\n          isError={imdbUrl.isErrorVisible && imdbUrl.isError}\n          onChange={this.changeHandler}\n          onFocus={this.focusOutHandler}\n          errorMes=\"this field is required and must place URL\"\n        />\n        <Input\n          value={imdbId.value}\n          name=\"imdbId\"\n          placeholder=\"imdbId\"\n          isError={imdbId.isErrorVisible && imdbId.isError}\n          onChange={this.changeHandler}\n          onFocus={this.focusOutHandler}\n          errorMes=\"this field is required and must be unique\"\n        />\n        <button\n          type=\"submit\"\n          className=\"btn\"\n          disabled={this.allFieldGood()}\n        >\n          Add\n        </button>\n      </form>\n    );\n  }\n}\n\nNewMovie.propTypes = {\n  idList: PropTypes.arrayOf(PropTypes.string).isRequired,\n  onAdd: PropTypes.func.isRequired,\n};\n\nclass Movie {\n  constructor(title, description, imgUrl, imdbUrl, imdbId) {\n    this.title = title;\n    this.description = description;\n    this.imgUrl = imgUrl;\n    this.imdbUrl = imdbUrl;\n    this.imdbId = imdbId;\n  }\n}\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie) => {\n    this.setState(({ movies }) => ({\n      movies: [...movies, movie],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie\n            idList={movies.map(movie => movie.imdbId)}\n            onAdd={this.addMovie}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}